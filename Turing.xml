<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="HTMLFiles/pmathml.xsl"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
        "HTMLFiles/xhtml-math11-f.dtd">

<!-- Created with the Wolfram Language : www.wolfram.com -->

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
 <title>
  Turing
 </title>
 <link href="HTMLFiles/Turing.css" rel="stylesheet" type="text/css" />
</head>

<body style="font-size: Floor[75. Inherited]%;">

<p class="Title">
 Penrose Encoding and graph visualization.
</p>



<p class="Subtitle">
 <br />Diana Itzel V&aacute;zquez Santiago.<br />Emmanuel Isaac Ju&aacute;rez Caballero.<br />Jes&uacute;s Eduardo Hermosilla D&iacute;az.<br />Maestr&iacute;a en Inteligencia Artificial, generaci&oacute;n 2021-2023
</p>



<p class="Subtitle">
 Introducci&oacute;n:
</p>



<p class="Text">
 <span style='font-size: 18px;'>Las M&aacute;quinas de Turing fueron propuestas por el matem&aacute;tico Alan Turing en 1936, son dispositivos computacionales abstractos capaces de simular la l&oacute;gica de cualquier algoritmo, lo cual las convierte en una poderosa herramienta matem&aacute;tica para ayudar a investigar el alcance y las limitaciones de lo que se puede calcular. Desde su propuesta, las Maquinas de Turing han marcado su importancia como el modelo de computaci&oacute;n m&aacute;s utilizado en las ciencias de la computaci&oacute;n y la teor&iacute;a de la complejidad.<br /><br />En t&eacute;rminos generales, las Maquinas de Turing est&aacute;n conformadas por cintas infinitas con representaciones binarias y un diagrama de estados o lista de instrucciones que determinaran el comportamiento de la m&aacute;quina, en cada paso el estado actual y el s&iacute;mbolo le&iacute;do en la cinta determinaran el siguiente estado, el s&iacute;mbolo que se emitir&aacute; en la cinta y la direcci&oacute;n a la cual se mover&aacute; el cabezal (derecha o izquierda).<br /><br />La limitante principal de las Maquinas de Turing es que precisamente, como se mencion&oacute; previamente, simulan un c&aacute;lculo especifico, por lo que para cada nuevo c&aacute;lculo que se quiera simular es necesario construir una maquina diferente, sin embargo, es posible codificar la lista de instrucciones de cualquier m&aacute;quina de Turing en una cadena y construir una m&aacute;quina de Turing que espere en su cinta una cadena que describa una lista de instrucciones, seguida de una cadena que describa la cinta de entrada, y compute la cinta que la M&aacute;quina de Turing codificada habr&iacute;a computado, esta M&aacute;quina de Turing capaz de emular el comportamiento de cualquier otra M&aacute;quina de Turing es conocida como la Maquina de Turing Universal.<br /><br />Si bien la cinta infinita que usan las Maquinas de Turing ya tiene una representaci&oacute;n binaria, es necesaria una codificaci&oacute;n que permita a la maquina distinguir entre espacios, instrucciones, n&uacute;meros, etc. Distintos autores han propuesto sus codificaciones para lidiar con este problema, uno de ellos es Roger Penrose que propone una serie de equivalencias para lograr una codificaci&oacute;n simple y eficiente.<br /><br />En este proyecto se presenta la codificaci&oacute;n de Penrose aplicada a un n&uacute;mero m con notaci&oacute;n decimal que representar&aacute; las instrucciones de la </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_1.gif" alt="Turing_1.gif" width="10" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>-&eacute;sima M&aacute;quina de Turing, para posteriormente construir el diagrama de estados de dicha M&aacute;quina y el comportamiento que tendr&aacute; dado un n&uacute;mero </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_2.gif" alt="Turing_2.gif" width="7" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> de entrada.</span>
</p>



<p class="Subtitle">
 Marco Te&oacute;rico:
</p>



<p class="Text">
 <span style='font-size: 18px;'>En 1936 y de manera independiente fueron publicados tres art&iacute;culos; &ldquo;</span><span style='font-size: 18px;font-style: italic;'>Finite Combinatory Processes&mdash;Formulation 1</span><span style='font-size: 18px;'>&rdquo; por Emil Post y que da origen a la m&aacute;quina de POST, &ldquo;</span><span style='font-size: 18px;font-style: italic;'>An Unsolvable Problem of Elementary Number Theory</span><span style='font-size: 18px;'>&rdquo; por Alonzo Church el cual formula el c&aacute;lculo </span><span><span><span><img src="HTMLFiles/Turing_3.gif" alt="Turing_3.gif" width="7" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> y &ldquo;</span><span style='font-size: 18px;font-style: italic;'>On computable numbers, with an application to the Entscheidungsproblem</span><span style='font-size: 18px;'>&rdquo; por Alan Turing que da origen a las m&aacute;quinas de Turing.<br /><br />En </span><span style='font-size: 18px;font-style: italic;'>esencia</span><span style='font-size: 18px;'> la m&aacute;quina de Post publicada por Emil Post y la m&aacute;quina de Turing son equivalentes, de igual manera la m&aacute;quina de Turing y el c&aacute;lculo </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_4.gif" alt="Turing_4.gif" width="8" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>&nbsp;&nbsp;de Church son equivalentes. <br /><br />La propuesta hecha por Turing es similar a los aut&oacute;matas finitos pero con una memoria ilimitada y sin restricciones. En este sentido la m&aacute;quina de Turing es un modelo de c&oacute;mputo general, las m&aacute;quinas de Turing pueden llevar a cabo las mismas operaciones que una computadora real, sin embargo, esto no implica que todos los problemas puedan ser resueltos por una m&aacute;quina de Turing.<br /><br /><br />Cinco a&ntilde;os antes de que la propuesta de Turing fuese publicada, K. G&ouml;edel (1931) prob&oacute; su teorema de incompletitud, el cual se puede entender como la no existencia de una teor&iacute;a matem&aacute;tica que pueda ser enteramente demostrable, es decir, que sea demostrable a partir de algo que no fuesen supuestos. <br />Formalmente esto se dice seg&uacute;n G&ouml;edel como:<br /><br />&ldquo;Para toda f&oacute;rmula A de la l&oacute;gica cuantificacional de primer orden, si A es l&oacute;gicamente verdadera, entonces A es deducible&rdquo;. Dicho formalmente: &ldquo;Si &#9566; A, entonces &#9500; A&rdquo;<br /><br />Esto est&aacute; intr&iacute;nsecamente relacionado con lo propuesto por Church/Turing, pues en sus trabajos ellos proponen que las m&aacute;quinas de Turing solo son capaces de computar funciones recursivamente numerables.<br /><br />Una m&aacute;quina de Turing consiste de un control finito que puede estar en cualquier estado de un conjunto finito de estados. El modelo propuesto por Turing usa una cinta infinita como m&eacute;todo de almacenamiento (memoria); tiene un cabezal, el cual puede leer, escribir y moverse a lo largo de la cinta.<br /><br />Inicialmente la cinta contiene &uacute;nicamente una cadena de entrada, si la m&aacute;quina necesita guardar informaci&oacute;n escribir&aacute; sobre la cinta. Para poder acceder a la informaci&oacute;n la m&aacute;quina puede mover su cabezal. La m&aacute;quina continua con el proceso de computaci&oacute;n asta que decide producir una salida, las salidas de </span><span style='font-size: 18px;font-style: italic;'>aceptaci&oacute;n</span><span style='font-size: 18px;'> y de </span><span style='font-size: 18px;font-style: italic;'>rechazo</span><span style='font-size: 18px;'> son obtenidas a partir del dise&ntilde;o de los mismos, por otro lado, si no se tiene una opci&oacute;n donde la m&aacute;quina tenga un estado de </span><span style='font-size: 18px;font-style: italic;'>aceptaci&oacute;n</span><span style='font-size: 18px;'> o </span><span style='font-size: 18px;font-style: italic;'>rechazo</span><span style='font-size: 18px;'> la m&aacute;quina seguir&aacute; computando para siempre, es decir sin </span><span style='font-size: 18px;font-style: italic;'>parar</span><span style='font-size: 18px;'>.<br /><br />Algo importante a considerar es las diferencias que presenta con respecto a los aut&oacute;matas finitos.<br /><br />- Una m&aacute;quina de Turing puede escribir sobre la cinta y leer a partir de ella.<br />- El proceso de lecto-escritura puede llevarse a cabo movi&eacute;ndose a la izquierda o a la derecha.<br />- La cinta es infinita.<br />- Los estados de aceptaci&oacute;n o rechazo toman efecto de manera inmediata.<br /><br />Formalmente, una m&aacute;quina de Turing es una 7-tupla </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_5.gif" alt="Turing_5.gif" width="162" height="21" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> son cojuntos finitos y:<br /><br />- </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_6.gif" alt="Turing_6.gif" width="10" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> es el conjunto de estados,<br />- </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_7.gif" alt="Turing_7.gif" width="8" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> es la entrada del alfabeto la cual no contiene a </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_8.gif" alt="Turing_8.gif" width="10" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>,<br />- </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_9.gif" alt="Turing_9.gif" width="8" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> es la cinta del alfabeto, donde </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_10.gif" alt="Turing_10.gif" width="40" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> y </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_11.gif" alt="Turing_11.gif" width="32" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>,<br />- </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_12.gif" alt="Turing_12.gif" width="149" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>es la funci&oacute;n de transici&oacute;n,<br />- </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_13.gif" alt="Turing_13.gif" width="35" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> es el estado inicial,<br />- </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_14.gif" alt="Turing_14.gif" width="45" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> es el estado de aceptaci&oacute;n, y<br />- </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_15.gif" alt="Turing_15.gif" width="40" height="21" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> es el estado de rechazo, y en donde se debe cumplir que: </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_16.gif" alt="Turing_16.gif" width="55" height="21" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>.<br /><br />* Un aspecto importante a considerar es que en general la funci&oacute;n de transici&oacute;n act&uacute;a sobre </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_17.gif" alt="Turing_17.gif" width="44" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>, sin embargo, puede determinarse que para una m&aacute;quina de Turing que tenga algoritmo soluble en un tiempo finito la funci&oacute;n de transici&oacute;n actuar&aacute; sobre </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_18.gif" alt="Turing_18.gif" width="66" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> donde </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_19.gif" alt="Turing_19.gif" width="11" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> denota el valor a partir del cual la m&aacute;quina se detiene, es decir, </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_20.gif" alt="Turing_20.gif" width="11" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> &ldquo;generar&aacute;&rdquo; estados de la forma </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_21.gif" alt="Turing_21.gif" width="52" height="21" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>.<br /><br />Pese a que la representaci&oacute;n anterior es sumamente &uacute;til para llevar a cabo el c&oacute;mputo, una representaci&oacute;n alternativa es propuesta por Penrose , en donde, de manera similar a lo descrito anteriormente describe a la m&aacute;quina de Turing como un dispositivo orientado a la realizaci&oacute;n del c&oacute;mputo en general compuesto por una cinta, un cabezal y la transici&oacute;n de derecha a izquierda. En este caso se propone una cinta sobre la cual el cabezal se mover&aacute;, esta estar&aacute; conformada por casillas &ldquo;rellenas&rdquo; de </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_22.gif" alt="Turing_22.gif" width="43" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>, en este caso el </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_23.gif" alt="Turing_23.gif" width="8" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> denota una casilla en blanco y el 1 como las casillas no vac&iacute;as. <br /><br />Un aspecto importante a considerar es que los estados que componen a la m&aacute;quina han de ser tales que sean finitos, de manera que el comportamiento de la m&aacute;quina de Turing estar&aacute; completamente determinado por un estado interno y la entrada de la cinta, misma que como se mencion&oacute; previamente est&aacute; compuesta &uacute;nicamente de 0&rsquo;s y 1&rsquo;s.<br /><br />En particular hemos de decir que siempre comenzaremos en el estado 0 y la cinta siempre deber&aacute; moverse a la derecha, esto por las razones expuestas previamente. A partir de aqu&iacute; el comportamiento de la m&aacute;quina de Turing ser&aacute; completamente determinado por las transiciones/reglas que determinan la misma.<br /><br />Es posible asociar un estado de la m&aacute;quina de Turing a un n&uacute;mero natural (Consid&eacute;rese que </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_24.gif" alt="Turing_24.gif" width="62" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>), bajo esta conversi&oacute;n podemos realizar un mapeo en un sistema num&eacute;rico equivalente. El sistema binario nos servir&aacute; para llevar a cabo la codificaci&oacute;n de los elementos de la cinta, esto es f&aacute;cilmente visible si se toma en cuenta que la codificaci&oacute;n de la cinta est&aacute; compuesta por 0&rsquo;s y 1&rsquo;s. Las razones por las que la cinta est&aacute; codificada en binario en lugar de alg&uacute;n otro sistema como el unario recae en el hecho del tama&ntilde;o de memoria, pese a que para n&uacute;meros peque&ntilde;os el sistema unario es muy eficaz en n&uacute;meros grandes el sistema binario es m&aacute;s compacto.<br /><br />Un aspecto importante a considerar es que en el proceso descrito por Penrose para llevar a cabo la codificaci&oacute;n se considera una &ldquo;variante&rdquo; del binario, la cual es descrita como _binario_ extendido. El procedimiento para convertir una salida de binario a binario extendido es sencillo, se siguen las reglas: &ldquo;,&nbsp;&rarr;&nbsp;110&rdquo;,&nbsp;&ldquo;0&nbsp;&rarr;&nbsp;1&rdquo;,&nbsp;&ldquo;1&rarr;10&rdquo;<br /><br />En la codificaci&oacute;n de Penrose es posible codificar a los estados que componen a una m&aacute;quina de Turing de la siguiente manera:<br /></span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_25.gif" alt="Turing_25.gif" width="33" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'><br /></span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_26.gif" alt="Turing_26.gif" width="40" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'><br /></span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_27.gif" alt="Turing_27.gif" width="49" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'><br /></span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_28.gif" alt="Turing_28.gif" width="55" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'><br /></span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_29.gif" alt="Turing_29.gif" width="99" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'><br />A este proceso podemos llamarle </span><span style='font-size: 18px;font-style: italic;'>traducci&oacute;n</span><span style='font-size: 18px;'> de la m&aacute;quina de Turing o </span><span style='font-size: 18px;font-style: italic;'>Codificaci&oacute;n de Penrose</span><span style='font-size: 18px;'>, pese a que las razones de esta codificaci&oacute;n no han sido descritas formalmente aqu&iacute; es posible advertir que el resultado de estas nos dar&aacute;n una estructura de grafo, similar a la propuesta inicialmente con la definici&oacute;n formal de m&aacute;quina de Turing.<br /><br />Podemos resumir lo descrito previamente en una serie de pasos:<br /><br />*&nbsp;&nbsp;&nbsp;&nbsp;Consideremos&nbsp;a&nbsp;un&nbsp;conjunto&nbsp;de&nbsp;valores&nbsp;</span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_30.gif" alt="Turing_30.gif" width="154" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> que representen los estados finitos de la cinta.<br /><br />*&nbsp;&nbsp;&nbsp;&nbsp;Podemos&nbsp;referirnos&nbsp;a&nbsp;los&nbsp;valores&nbsp;como&nbsp;instrucciones/operaciones,&nbsp;en&nbsp;donde&nbsp;la&nbsp;coma&nbsp;solo&nbsp;denota&nbsp;el&nbsp;espacio&nbsp;entre&nbsp;los&nbsp;n&uacute;meros.<br /><br />La&nbsp;codificaci&oacute;n&nbsp;para&nbsp;denotar&nbsp;a&nbsp;los&nbsp;n&uacute;meros&nbsp;se&nbsp;hace&nbsp;en&nbsp;binario&nbsp;considerando&nbsp;que&nbsp;&ldquo;,&rarr;110&rdquo;,0&rarr;1&rdquo;,&nbsp;&ldquo;110&rdquo;,&nbsp;de&nbsp;manera&nbsp;que&nbsp;el&nbsp;proceso&nbsp;de&nbsp;escritura&nbsp;en&nbsp;binario&nbsp;expandido&nbsp;ser&iacute;a&nbsp;mediante&nbsp;la&nbsp;lectura&nbsp;de&nbsp;los&nbsp;valores&nbsp;en&nbsp;binario&nbsp;y&nbsp;mediante&nbsp;el&nbsp;uso&nbsp;de&nbsp;las&nbsp;sustituciones&nbsp;previas.<br /><br />*&nbsp;&nbsp;&nbsp;Una&nbsp;condici&oacute;n&nbsp;importante&nbsp;es&nbsp;que&nbsp;los&nbsp;ceros&nbsp;iniciales&nbsp;a&nbsp;la&nbsp;izquierda&nbsp;son&nbsp;reduntantes,&nbsp;pues&nbsp;no&nbsp;expresan&nbsp;ning&uacute;n&nbsp;valor&nbsp;en&nbsp;la&nbsp;codificaci&oacute;n&nbsp;individual&nbsp;de&nbsp;cada&nbsp;n&uacute;mero.<br /><br />De esta manera es posible expresar a los elementos de la m&aacute;quina de Turing en una codificaci&oacute;n m&aacute;s compacta y legible pues ahora el funcionamiento de una m&aacute;quina de Turing estar&aacute; descrito por un conjunto finito de instrucciones. </span>
</p>



<p class="Subsubsection">
 La m&aacute;quina de Turing Universal.
</p>



<p class="Text">
 <span style='font-size: 18px;'>La forma de describir una m&aacute;quina de Turing universal o UTM por sus siglas en ingl&eacute;s es en principio simple, su funcionamiento consiste en traducir una lista de instrucciones de una m&aacute;quina de Turing arbitraria a una cadena de 0&rsquo;s y 1&rsquo;s representadas en una cinta. La cinta es entonces usada como la parte inicial de alguna entrada para alguna m&aacute;quina de Turing, la cual es llamada UTM. La m&aacute;quina de Turing es un mimetizador universal, la parte inicial de la cinta provee a la UTM de toda la informaci&oacute;n que necesita para imitar cualquier m&aacute;quina de Turing </span><span><span><img src="HTMLFiles/Turing_31.gif" alt="Turing_31.gif" width="11" height="18" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> de manera exacta.<br /><br />Para verificar su funcionamiento es importante tener en claro como se lleva a cabo el proceso sistem&aacute;tico de numeraci&oacute;n de las m&aacute;quinas de Turing. El proceso de decodificaci&oacute;n se hace tomando en cuenta el proceso inverso a la codificaci&oacute;n, considerando una salvedad, la introducci&oacute;n de unos caracteres de inicio y fin, los cuales est&aacute;n determinados por &ldquo;110 &rarr; ,&rdquo; y que se puede considerar &uacute;nicamente como elementos que separan a los n&uacute;meros que deben ser le&iacute;dos. Por consiguiente se adopta la codificaci&oacute;n:<br /> </span><span><span><span><img src="HTMLFiles/Turing_32.gif" alt="Turing_32.gif" width="7" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> para </span><span><span><span><img src="HTMLFiles/Turing_33.gif" alt="Turing_33.gif" width="7" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> &oacute; </span><span><span><span><img src="HTMLFiles/Turing_34.gif" alt="Turing_34.gif" width="7" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>,<br /></span><span><span><span><img src="HTMLFiles/Turing_35.gif" alt="Turing_35.gif" width="18" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> para 1 &oacute; </span><span><span><span><img src="HTMLFiles/Turing_36.gif" alt="Turing_36.gif" width="7" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>,<br /></span><span><span><span><img src="HTMLFiles/Turing_37.gif" alt="Turing_37.gif" width="24" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> para </span><span><span><span><img src="HTMLFiles/Turing_38.gif" alt="Turing_38.gif" width="7" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>,<br /></span><span><span><span><img src="HTMLFiles/Turing_39.gif" alt="Turing_39.gif" width="31" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> para </span><span><span><span><img src="HTMLFiles/Turing_40.gif" alt="Turing_40.gif" width="7" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>,<br /></span><span><span><span><img src="HTMLFiles/Turing_41.gif" alt="Turing_41.gif" width="39" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> para</span><span><span><span><img src="HTMLFiles/Turing_42.gif" alt="Turing_42.gif" width="55" height="16" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'><br />Bajo este procedimiento es posible etiquetar a las m&aacute;quinas de Turing, en particular las primeras 13 son:<br /></span>
</p>



<p class='Subsection' style='text-align: center;'>
 <img src="HTMLFiles/Turing_43.gif" alt="Turing_43.gif" width="1032" height="495" style="vertical-align:middle" />
</p>

<p class="Text">
 <span style='font-size: 18px;'>Ahora, es posible considerar la acci&oacute;n de una m&aacute;quina de Turing </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_44.gif" alt="Turing_44.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> en alguna cadena finita de 0&rsquo;s y 1&rsquo;s sobre una cinta la cual siempre alimentemos a la derecha, misma que como se discuti&oacute; previamente debe estar codificada en binario extendido. Si la cinta generada de la m&aacute;quina </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_45.gif" alt="Turing_45.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> eventualmente se detiene la cadena de n&uacute;meros binarios que se ha producido es la respuesta al c&aacute;lculo que realiza la m&aacute;quina de Turing </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_46.gif" alt="Turing_46.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>, dicho de otra manera:<br /><br />Una cinta de instrucciones finitas con paro conduce a la computaci&oacute;n de la m&aacute;quina de Turing </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_47.gif" alt="Turing_47.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> sobre alg&uacute;n valor num&eacute;rico, es decir: </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_48.gif" alt="Turing_48.gif" width="55" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>. <br />En resumen,la m&aacute;quina </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_49.gif" alt="Turing_49.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> ser&aacute; codificada en una cinta que recibir&aacute; como entrada un n&uacute;mero m y tendr&aacute; como salida un n&uacute;mero </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_50.gif" alt="Turing_50.gif" width="7" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>.<br />Por ejemplo, consid&eacute;rese el caso en donde </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_51.gif" alt="Turing_51.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> es la m&aacute;quina de Turing que calcula el valor del cuadrado de un n&uacute;mero, se tendr&aacute; que</span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_52.gif" alt="Turing_52.gif" width="57" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>con </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_53.gif" alt="Turing_53.gif" width="38" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>.<br /><br />En particular en este trabajo se implementar&aacute;n las m&aacute;quinas de Turing </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_54.gif" alt="Turing_54.gif" width="41" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> y la m&aacute;quina de Turing </span><span style='font-size: 18px;'><span> <span><img src="HTMLFiles/Turing_55.gif" alt="Turing_55.gif" width="45" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> las cuales corresponden en la codificaci&oacute;n de n&uacute;meros naturales a la m&aacute;quinas </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_56.gif" alt="Turing_56.gif" width="292" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> y </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_57.gif" alt="Turing_57.gif" width="89" height="19" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> respectivamente.<br /><br />En general, la m&aacute;quina de Turing Universal se puede escribir formalmente como:<br /></span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_58.gif" alt="Turing_58.gif" width="93" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> es decir, la m&aacute;quina de Turing es una m&aacute;quina que recibe dos entradas, </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_59.gif" alt="Turing_59.gif" width="7" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> que corresponde al n&uacute;mero de la m&aacute;quina de Turing por mimetizar y </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_60.gif" alt="Turing_60.gif" width="10" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'>, el n&uacute;mero sobre el cual la m&aacute;quina de Turing </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_61.gif" alt="Turing_61.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'> debe computar.<br />Sin embargo, como se ha descrito previamente la m&aacute;quina de Turing universal es un mimetizador universal, la pregunta es, &iquest;existe una m&aacute;quina de Turing que mimetice el comportamiento de la m&aacute;quina universal?, la respuesta es s&iacute; el n&uacute;mero </span><span style='font-size: 18px;'><span><span><img src="HTMLFiles/Turing_62.gif" alt="Turing_62.gif" width="7" height="17" style="vertical-align:middle" /></span></span></span><span style='font-size: 18px;'> que genera la m&aacute;quina </span><span style='font-size: 18px;'><span><img src="HTMLFiles/Turing_63.gif" alt="Turing_63.gif" width="13" height="20" style="vertical-align:middle" /></span></span><span style='font-size: 18px;'>.</span><br />
</p>



<p class="Subsection">
 Metodolog&iacute;a
</p>



<p class="Subtitle">
 Penrose codification
</p>



<p class="Text">
 Para obtener la codificaci&oacute;n de Penrose se escribi&oacute; un&nbsp;&nbsp;programa en python que genera un archivo&nbsp;&nbsp;csv con los elementos necesarios para generar nuestras m&aacute;quinas de Turing. El algoritmo recibe como entrada un n&uacute;mero entero <span style='font-style: italic;'>m</span>&nbsp;&nbsp;y devuelve como salida la lista de instrucciones necesarias para aplicar la m&aacute;quina a un n&uacute;mero <span style='font-style: italic;'>n</span>.<br /><br />Con este prop&oacute;sito se definen dos funciones auxiliares con el prop&oacute;sito de convertir a m en un n&uacute;mero binario.&nbsp;&nbsp;
</p>



<p class="Text">
 <span style='font-family: Courier New;font-style: italic;'>def decimal2binary(dec_number):<br />&nbsp;&nbsp;&nbsp;&nbsp;input_binary = bin(dec_number).replace(&ldquo;0b&rdquo;, &ldquo;&rdquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;TM_binary = str(&lsquo;110&rsquo;) + input_binary + str(&lsquo;110&rsquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;return TM_binary<br />def even_or_odd(number):<br />&nbsp;&nbsp;&nbsp;&nbsp;if number % 2 == 0:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0<br />&nbsp;&nbsp;&nbsp;&nbsp;else:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1</span>
</p>



<p class="Text">
 Finalmente, se crea la funci&oacute;n principal, en ella se aplica sistem&aacute;ticamente las equivalencias propuestas por Penrose para generar la codificaci&oacute;n correspondiente as&iacute; como las instrucciones implicadas. 
</p>



<p class='Text' style='background-color: #FFFFFF;'>
 <span style='font-family: Courier New;color: #000000;background-color: #FFFFFF;'>def Penrose_coding(number):<br />&nbsp;&nbsp;&nbsp;&nbsp;output=[]<br />&nbsp;&nbsp;&nbsp;&nbsp;binary_number = decimal2binary(number)<br />&nbsp;&nbsp;&nbsp;&nbsp;TM_list = [int(x) for x in (binary_number)]<br />&nbsp;&nbsp;&nbsp;&nbsp;current_state = 0<br />&nbsp;&nbsp;&nbsp;&nbsp;count_state = 0<br />&nbsp;&nbsp;&nbsp;&nbsp;new_state = []<br />&nbsp;&nbsp;&nbsp;&nbsp;TM_decode = []<br />&nbsp;&nbsp;&nbsp;&nbsp;fail = False<br />&nbsp;&nbsp;&nbsp;&nbsp;while len(TM_list)!=0:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bin_current_state =bin(current_state).replace(&ldquo;0b&rdquo;,&rdquo;&rdquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bin_new_input = even_or_odd(count_state)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (TM_list[0] == 0) &amp; (len(TM_list) &gt;= 1):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TM_decode.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del TM_list[0]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (TM_list[0] == 1) &amp; (TM_list[1] == 0) &amp; (len(TM_list) &gt;= 2):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TM_decode.append(1)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(1)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del TM_list[0:2]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (TM_list[0] == 1) &amp; (TM_list[1] == 1) &amp; (TM_list[2] == 0) &amp; (len(TM_list) &gt;= 3):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TM_decode.append(&lsquo;R&rsquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (len(new_state) == 0):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (len(new_state)==1): new_state = [0] + new_state<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.append(str(bin_current_state) + str(bin_new_input) + &lsquo; -&gt; &lsquo;&nbsp;&nbsp;+ &lsquo;&rsquo;.join(str(x) for x in new_state) + &lsquo;R&rsquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_state = count_state + 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.clear()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del TM_list[0:3]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (even_or_odd(count_state) == 0):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_state = current_state + 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (TM_list[0] == 1) &amp; (TM_list[1] == 1) &amp; (TM_list[2] == 1) &amp; (TM_list[3] == 0) &amp; (len(TM_list) &gt;= 4):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TM_decode.append(&lsquo;L&rsquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (len(new_state) == 0):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (len(new_state)==1): new_state = [0] + new_state<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.append(str(bin_current_state) + str(bin_new_input) + &lsquo; -&gt; &lsquo; + &lsquo;&rsquo;.join(str(x) for x in new_state) + &lsquo;L&rsquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_state = count_state + 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.clear()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del TM_list[0:4]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (even_or_odd(count_state) == 0):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_state = current_state + 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (TM_list[0] == 1) &amp; (TM_list[1] == 1) &amp; (TM_list[2] == 1) &amp; (TM_list[3] == 1) &amp; (TM_list[4] == 0) &amp; (len(TM_list) &gt;= 5):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TM_decode.append(&lsquo;H&rsquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (len(new_state) == 0):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (len(new_state)==1): new_state = [0] + new_state<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.append(str(bin_current_state) + str(bin_new_input) + &lsquo; -&gt; &lsquo; + &lsquo;&rsquo;.join(str(x) for x in new_state) + &lsquo;H&rsquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_state = count_state + 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_state.clear()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del TM_list[0:5]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (even_or_odd(count_state) == 0):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_state = current_state + 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail = True<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a=str(bin_current_state) + str(bin_new_input) + &lsquo; -&gt; &lsquo; + &lsquo;&rsquo;.join(str(x) for x in new_state) + &lsquo;?&rsquo;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.append(a)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break<br />&nbsp;&nbsp;&nbsp;&nbsp;TM_decode_str = [str(x) for x in (TM_decode)]<br />&nbsp;&nbsp;&nbsp;&nbsp;return binary_number, TM_decode_str, fail, output</span>
</p>



<p class="Text">
 Finalmente, se define una interfaz con el objetivo de aplicar las funciones anteriores y as&iacute; obtener la lista de instrucciones:
</p>



<p class="Text">
 <span style='font-family: Courier New;font-style: italic;'>def codificacion(n):<br />&nbsp;&nbsp;&nbsp;&nbsp;TM_decimal = n<br />&nbsp;&nbsp;&nbsp;&nbsp;binn, tmstr, fail, output = Penrose_coding(TM_decimal)<br />&nbsp;&nbsp;&nbsp;&nbsp;if fail==True:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&ldquo;TM not represented correctly \n \t &ldquo;)<br />&nbsp;&nbsp;&nbsp;&nbsp;print(&lsquo;TM converted to binary: &lsquo;, binn)<br />&nbsp;&nbsp;&nbsp;&nbsp;print(&lsquo;TM after Penrose Coding: &lsquo;, &lsquo;&rsquo;.join(tmstr))<br />&nbsp;&nbsp;&nbsp;&nbsp;representation={&ldquo;Instructions from TM&rdquo;: output}<br />&nbsp;&nbsp;&nbsp;&nbsp;rep=pd.DataFrame(representation)<br />&nbsp;&nbsp;&nbsp;&nbsp;#fi={&lsquo;TM converted to binary: &lsquo;: binn, &lsquo;TM after Penrose Coding: &lsquo;: &lsquo;&rsquo;.join(tmstr),<br />&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;Instructions from TM&rdquo;: output}<br />&nbsp;&nbsp;&nbsp;&nbsp;fi=output<br />&nbsp;&nbsp;&nbsp;&nbsp;filename=str(n)+&ldquo;.txt&rdquo;<br />&nbsp;&nbsp;&nbsp;&nbsp;with open(&ldquo;universal.txt&rdquo;, &lsquo;w&rsquo;) as file:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.write(str(fi))<br />&nbsp;&nbsp;&nbsp;&nbsp;print(rep)</span>
</p>



<p class="Text">
 Para implementar nuestra decodificaci&oacute;n se define una funci&oacute;n auxiliar con el prop&oacute;sito de realizar la expansi&oacute;n.
</p>



<p class="Text">
 <span style='font-size: 12px;font-family: Courier New;'>def expansion(n):<br />&nbsp;&nbsp;&nbsp;&nbsp;n=decimal2binary(n)<br />&nbsp;&nbsp;&nbsp;&nbsp;n=[int(x) for x in (n)]<br />&nbsp;&nbsp;&nbsp;&nbsp;n2=[]<br />&nbsp;&nbsp;&nbsp;&nbsp;n2.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;while len(n)!=0:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if n[0]==0 &amp; (len(n) &gt;= 1):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n2.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del n[0]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif (n[0]==1) &amp; (len(n) &gt;= 1):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n2.append(1)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n2.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del n[0]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(n)<br />&nbsp;&nbsp;&nbsp;&nbsp;n2.append(1)<br />&nbsp;&nbsp;&nbsp;&nbsp;n2.append(1)<br />&nbsp;&nbsp;&nbsp;&nbsp;n2.append(0)<br />&nbsp;&nbsp;&nbsp;&nbsp;return n2<br />a=pd.read_csv(&ldquo;procesado.csv&rdquo;, header=None)<br />a.columns=([&ldquo;Si&rdquo;,&rdquo;Read&rdquo;,&rdquo;Write&rdquo;,&rdquo;Move&rdquo;,&rdquo;Si+1&rdquo;])<br />idx=(a.index[a[&ldquo;Move&rdquo;]==&rdquo;H&rdquo;])<br />a.loc[idx,&rdquo;Si+1&rdquo;]=&rdquo;H&rdquo;<br />a.loc[idx,&rdquo;Move&rdquo;]=&rdquo;R&rdquo;</span>
</p>



<p class="Text">
 Finalmente, se muestra el pseudoc&oacute;digo necesario para computar la m&aacute;quina universal dado un n&uacute;mero n y la lista de reglas generada por la codificaci&oacute;n de Penrose:
</p>



<p class="Text">
 <span style='font-size: 12px;font-family: Courier New;font-style: italic;font-weight: bold;'>Programa: M&aacute;quina Universal de Turing</span><span style='font-size: 12px;font-family: Courier New;font-style: italic;'><br /><br /></span><span style='font-size: 12px;font-family: Courier New;font-style: italic;font-weight: bold;'>reglas </span><span style='font-size: 12px;font-family: Courier New;font-style: italic;'>-&gt; lista de reglas de la cinta<br />cinta -&gt; n&uacute;mero en binario a procesar<br />while True:<br />&nbsp;&nbsp;&nbsp;&nbsp;i -&gt; &Iacute;ndice de la i-&eacute;sima instrucci&oacute;n<br />&nbsp;&nbsp;&nbsp;&nbsp;i_state -&gt; estado actual de la cinta <br />&nbsp;&nbsp;&nbsp;&nbsp;for {i, i_state} in cinta:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(i, i_state)<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;if i_state = Halt<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;j -&gt; j-&eacute;simo elemento de la cinta<br />&nbsp;&nbsp;&nbsp;&nbsp;j_rule -&gt; j-&eacute;sima regla a aplicar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;if {j, j_rule} not in reglas<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;new_symbol -&gt; s&iacute;mbolo que escribe<br />&nbsp;&nbsp;&nbsp;&nbsp;direction -&gt; direcci&oacute;n del cabezal<br />&nbsp;&nbsp;&nbsp;&nbsp;new_state -&gt; s&iacute;mbolo que escribe<br />&nbsp;&nbsp;&nbsp;&nbsp;if direction = left<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if pos &gt; 0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos = pos - 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insertar un 0 en la cinta<br />&nbsp;&nbsp;&nbsp;&nbsp;if direction = right<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos = pos + 1<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;i_tape = new_state&nbsp;&nbsp;&nbsp;&nbsp;</span>
</p>



<p class="Section">
 Resultados-1: Grafos y listas de instrucciones de la m&aacute;quina de Turing Universal, la m&aacute;quina de Turing XN+1 y la m&aacute;quina de Turing XN*2
</p>



<p class="Subsubsection">
 Grafo de la m&aacute;quina universal de Turing.
</p>



<p class="Text">
 <span style='text-align: center;'><span><img src="HTMLFiles/Turing_64.gif" alt="Turing_64.gif" width="1018" height="1051" style="vertical-align:middle" /></span></span><span class="InputInline"><span><img src="HTMLFiles/Turing_65.gif" alt="Turing_65.gif" width="273" height="363" style="vertical-align:middle" /></span></span>
</p>



<p class="Subsubsection">
 Grafo de la m&aacute;quina XN+1
</p>



<p class='Input' style='text-align: center;'>
 <img src="HTMLFiles/Turing_66.gif" alt="Turing_66.gif" width="1006" height="428" style="vertical-align:middle" />
</p>

<p class="Subsubsection">
 Grafo de la m&aacute;quina XN*2
</p>



<p class='Input' style='text-align: center;'>
 <img src="HTMLFiles/Turing_67.gif" alt="Turing_67.gif" width="839" height="529" style="vertical-align:middle" />
</p>

<p class="Section">
 Resultados-2: Pruebas de ejecuci&oacute;n de la m&aacute;quina de Turing XN+1 y XN*2 a partir de la m&aacute;quina de Turing Universal.
</p>



<p class="Subsubsection">
 Ejecuci&oacute;n de la m&aacute;quina de Turing XN+1 para la entrada <span><span><img src="HTMLFiles/Turing_68.gif" alt="Turing_68.gif" width="102" height="21" style="vertical-align:middle" /></span></span> para m=2
</p>



<p class="Text">
 <span style='font-size: 18px;'>El resultado de la m&aacute;quina de Turing es la &uacute;ltima l&iacute;nea mostrada a la derecha, esta se encuentra en la codificaci&oacute;n del binario extendido, se muestra a la derecha el resultado de la decodificaci&oacute;n mostrando el resultado correcto, correspondiente a 3.</span>
</p>



<p class="Input">
 <img src="HTMLFiles/Turing_69.gif" alt="Turing_69.gif" width="788" height="367" style="vertical-align:middle" />
</p>

<p class="Subsubsection">
 Ejecuci&oacute;n de la m&aacute;quina de Turing XN*2 para la entrada <span><span><img src="HTMLFiles/Turing_70.gif" alt="Turing_70.gif" width="104" height="21" style="vertical-align:middle" /></span></span> para m=3
</p>



<p class="Text">
 <span style='font-size: 18px;'>El resultado de la m&aacute;quina de Turing es la &uacute;ltima l&iacute;nea mostrada a la derecha, esta se encuentra en la codificaci&oacute;n del binario extendido, se muestra a la derecha el resultado de la decodificaci&oacute;n mostrando el resultado correcto, correspondiente a 6.</span>
</p>



<p class="Input">
 <img src="HTMLFiles/Turing_71.gif" alt="Turing_71.gif" width="1030" height="418" style="vertical-align:middle" />
</p>

<p class="Section">
 Conclusiones:
</p>



<p class="Text">
 <span style='font-size: 18px;'>En este proyecto se present&oacute; un programa que muestra visualmente el funcionamiento de las M&aacute;quinas de Turing y la codificaci&oacute;n de Penrose con su equivalente diagrama de estados. Se puede ver claramente que en el caso de las M&aacute;quinas de Turing XN+1 y XN*2 que fueron las pruebas ejecutadas, los resultados obtenidos fueron correctos al adicionar o multiplicar las entradas dadas a cada m&aacute;quina, de igual manera esto se debi&oacute; a la correcta implementaci&oacute;n de la codificaci&oacute;n de Penrose en la cinta.</span><br />
</p>



<p class="Section">
 Ejecuci&oacute;n de la libreta:
</p>



<p class="Subtitle">
 Celdas de inicializaci&oacute;n
</p>



<p class='Input' style='background-color: #F0E8E0;'>
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mrow>
  <mrow>
   <mtext>(*</mtext>
   <mrow>
    <mi>Starting</mi>
    <mo>&InvisibleTimes;</mo>
    <mi>Executing</mi>
    <mo>&InvisibleTimes;</mo>
    <mi>Cells</mi>
   </mrow>
   <mtext>*)</mtext>
  </mrow>
  <mo>&InvisibleTimes;</mo>
  <mtext>&#62371;</mtext>
  <mrow>
   <mrow>
    <mrow>
     <mi>Clear</mi>
     <mo>[</mo>
     <ms>Global`*</ms>
     <mo>]</mo>
    </mrow>
    <mo>;</mo>
   </mrow>
   <mo>&InvisibleTimes;</mo>
   <mtext>&NewLine;</mtext>
   <mrow>
    <mrow>
     <mi>SetDirectory</mi>
     <mo>[</mo>
     <mrow>
      <mi>NotebookDirectory</mi>
      <mo>[</mo>
      <mo>]</mo>
     </mrow>
     <mo>]</mo>
    </mrow>
    <mo>;</mo>
   </mrow>
   <mo>&InvisibleTimes;</mo>
   <mtext>&NewLine;</mtext>
   <mrow>
    <mi>FindExternalEvaluators</mi>
    <mo>[</mo>
    <ms>Python</ms>
    <mo>]</mo>
   </mrow>
   <mo>&InvisibleTimes;</mo>
   <mtext>&NewLine;</mtext>
   <mrow>
    <mrow>
     <mi>session</mi>
     <mo>=</mo>
     <mrow>
      <mi>StartExternalSession</mi>
      <mo>[</mo>
      <ms>Python</ms>
      <mo>]</mo>
     </mrow>
    </mrow>
    <mo>;</mo>
   </mrow>
  </mrow>
 </mrow>
</math>
</p>

<p class="Output">
 <img src="HTMLFiles/Turing_72.gif" alt="Turing_72.gif" width="1045" height="57" style="vertical-align:middle;" usemap="#map_72" />
<map name="map_72">
<area shape="rect" coords="967,40,976,26" title="Annotation[C:\Program Files\Python39\python.exe, TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1c4af71f-6154-4457-aafd-88ce28938f44][{Key[25154200-cab0-c29d-1b2b-53bf611f4629], Key[Executable]}, Item, False], Mouse]" nohref="" />
<area shape="rect" coords="967,19,976,5" title="Annotation[EventHandler[MouseAppearance[Mouseover[Executable, Executable], LinkHand], {MouseClicked, 1} :> If[TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[TypeSystem`NestedGrid`PackagePrivate`$state$$], TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, Executable}, 1]]], TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1c4af71f-6154-4457-aafd-88ce28938f44][{All, Executable}, ColumnHeader, True], Mouse]" nohref="" />
</map>
</p>

<p class="Subtitle">
 Ejecuci&oacute;n del c&oacute;digo de python para la codificaci&oacute;n de Penrose.
</p>



<p class="Input">
 <img src="HTMLFiles/Turing_73.gif" alt="Turing_73.gif" width="316" height="135" style="vertical-align:middle" />
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mtext>TM after Penrose Coding:  R10R1R100R111RR1H</mtext>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mtext>  Instructions from TM</mtext>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>0            00 -&gt; 00R</mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>1            01 -&gt; 10R</mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>2            10 -&gt; 01R</mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>3           11 -&gt; 100R</mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>4          100 -&gt; 111R</mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>5           101 -&gt; 00R</mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>6           110 -&gt; 01H</mn>
</math>
</p>

<p class="Subtitle">
 Pre procesamiento de las reglas para la construcci&oacute;n de la codificaci&oacute;n de Penrose.
</p>



<p class="Input">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mrow>
  <mrow>
   <mi>MT</mi>
   <mo>=</mo>
   <mrow>
    <mi>Import</mi>
    <mo>[</mo>
    <ms>universal.txt</ms>
    <mo>]</mo>
   </mrow>
  </mrow>
  <mo>;</mo>
 </mrow>
</math>
</p>

<p class="Input">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mrow>
  <mrow>
   <mi>MT</mi>
   <mo>=</mo>
   <mrow>
    <mi>StringDelete</mi>
    <mo>[</mo>
    <mrow>
     <mrow>
      <mi>StringSplit</mi>
      <mo>[</mo>
      <mrow>
       <mrow>
        <mrow>
         <mi>Text</mi>
         <mo>[</mo>
         <mi>MT</mi>
         <mo>]</mo>
        </mrow>
        <mo>&LeftDoubleBracket;</mo>
        <mn>1</mn>
        <mo>&RightDoubleBracket;</mo>
       </mrow>
       <mo>,</mo>
       <ms>,</ms>
      </mrow>
      <mo>]</mo>
     </mrow>
     <mo>,</mo>
     <mrow>
      <mo>{</mo>
      <mrow>
       <ms>[</ms>
       <mo>,</mo>
       <ms>]</ms>
       <mo>,</mo>
       <ms>'</ms>
       <mo>,</mo>
       <mtext> </mtext>
       <ms> </ms>
      </mrow>
      <mo>}</mo>
     </mrow>
    </mrow>
    <mo>]</mo>
   </mrow>
  </mrow>
  <mo>;</mo>
 </mrow>
</math>
</p>

<p class="Subtitle">
 Visualizaci&oacute;n usando Multigraph2 con elementos modificados, originalmente fue modificado a partir de:(https://mathematica.stackexchange.com/questions/201183/how-to-get-distinct-labels-on-parallel-edges-in-a-graph)
</p>



<p class="Subsection">
 Integraci&oacute;n de MultiGraph2 implementation: Una herramienta para visualizar grafos en Wolfram Mathematica (de manera default no se pueden construir gr&aacute;ficos con m&uacute;ltiples etiquetas).
</p>



<p class='Input' style='color: #800080;background-color: #E0FFE0;'>
 <img src="HTMLFiles/Turing_74.gif" alt="Turing_74.gif" width="1636" height="104" style="vertical-align:middle" />
</p>

<p class="Subsection">
 Generaci&oacute;n de la tabla de asociaciones para modificar el conjunto para usar multigraph2
</p>



<p class='Input' style='background-color: #FFE6CC;'>
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mrow>
  <mrow>
   <mi>fn</mi>
   <mo>=</mo>
   <mrow>
    <mi>ParallelTable</mi>
    <mo>[</mo>
    <mrow>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mrow>
        <mo>{</mo>
        <mrow>
         <mi>FromDigits</mi>
         <mo>[</mo>
         <mrow>
          <mrow>
           <mrow>
            <mrow>
             <mo>(</mo>
             <mrow>
              <mrow>
               <mrow>
                <mi>StringSplit</mi>
                <mo>[</mo>
                <mrow>
                 <mrow>
                  <mi>MT</mi>
                  <mo>[</mo>
                  <mrow>
                   <mo>[</mo>
                   <mi>i</mi>
                   <mo>]</mo>
                  </mrow>
                  <mo>]</mo>
                 </mrow>
                 <mo>,</mo>
                 <ms>-&gt;</ms>
                </mrow>
                <mo>]</mo>
               </mrow>
               <mo>[</mo>
               <mrow>
                <mo>[</mo>
                <mn>1</mn>
                <mo>]</mo>
               </mrow>
               <mo>]</mo>
              </mrow>
              <mo>//</mo>
              <mi>Characters</mi>
             </mrow>
             <mo>)</mo>
            </mrow>
            <mo>[</mo>
            <mrow>
             <mo>[</mo>
             <mrow>
              <mn>1</mn>
              <mtext>;;</mtext>
              <mrow>
               <mo>-</mo>
               <mn>2</mn>
              </mrow>
             </mrow>
             <mo>]</mo>
            </mrow>
            <mo>]</mo>
           </mrow>
           <mo>//</mo>
           <mi>StringJoin</mi>
          </mrow>
          <mtext> </mtext>
          <mo>,</mo>
          <mn>2</mn>
         </mrow>
         <mo>]</mo>
        </mrow>
        <mo>}</mo>
       </mrow>
       <mo>,</mo>
       <mrow>
        <mo>{</mo>
        <mrow>
         <mrow>
          <mi>FromDigits</mi>
          <mo>[</mo>
          <mrow>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mrow>
              <mrow>
               <mo>(</mo>
               <mrow>
                <mrow>
                 <mrow>
                  <mi>StringSplit</mi>
                  <mo>[</mo>
                  <mrow>
                   <mrow>
                    <mi>MT</mi>
                    <mo>[</mo>
                    <mrow>
                     <mo>[</mo>
                     <mi>i</mi>
                     <mo>]</mo>
                    </mrow>
                    <mo>]</mo>
                   </mrow>
                   <mo>,</mo>
                   <ms>-&gt;</ms>
                  </mrow>
                  <mo>]</mo>
                 </mrow>
                 <mo>[</mo>
                 <mrow>
                  <mo>[</mo>
                  <mn>1</mn>
                  <mo>]</mo>
                 </mrow>
                 <mo>]</mo>
                </mrow>
                <mo>//</mo>
                <mi>Characters</mi>
               </mrow>
               <mo>)</mo>
              </mrow>
              <mo>[</mo>
              <mrow>
               <mo>[</mo>
               <mrow>
                <mn>1</mn>
                <mtext>;;</mtext>
                <mrow>
                 <mo>-</mo>
                 <mn>2</mn>
                </mrow>
               </mrow>
               <mo>]</mo>
              </mrow>
              <mo>]</mo>
             </mrow>
             <mo>//</mo>
             <mi>StringJoin</mi>
            </mrow>
            <mtext> </mtext>
            <mo>)</mo>
           </mrow>
           <mo>,</mo>
           <mn>2</mn>
          </mrow>
          <mo>]</mo>
         </mrow>
         <mo>&InvisibleTimes;</mo>
         <mi>&#62421;</mi>
         <mo>&InvisibleTimes;</mo>
         <mrow>
          <mi>FromDigits</mi>
          <mo>[</mo>
          <mrow>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mrow>
              <mrow>
               <mo>(</mo>
               <mrow>
                <mrow>
                 <mrow>
                  <mi>StringSplit</mi>
                  <mo>[</mo>
                  <mrow>
                   <mrow>
                    <mi>MT</mi>
                    <mo>[</mo>
                    <mrow>
                     <mo>[</mo>
                     <mi>i</mi>
                     <mo>]</mo>
                    </mrow>
                    <mo>]</mo>
                   </mrow>
                   <mo>,</mo>
                   <ms>-&gt;</ms>
                  </mrow>
                  <mo>]</mo>
                 </mrow>
                 <mo>[</mo>
                 <mrow>
                  <mo>[</mo>
                  <mn>2</mn>
                  <mo>]</mo>
                 </mrow>
                 <mo>]</mo>
                </mrow>
                <mo>//</mo>
                <mi>Characters</mi>
               </mrow>
               <mo>)</mo>
              </mrow>
              <mo>[</mo>
              <mrow>
               <mo>[</mo>
               <mrow>
                <mtext>;;</mtext>
                <mrow>
                 <mo>-</mo>
                 <mn>3</mn>
                </mrow>
               </mrow>
               <mo>]</mo>
              </mrow>
              <mo>]</mo>
             </mrow>
             <mo>//</mo>
             <mi>StringJoin</mi>
            </mrow>
            <mo>)</mo>
           </mrow>
           <mo>,</mo>
           <mn>2</mn>
          </mrow>
          <mo>]</mo>
         </mrow>
        </mrow>
        <mo>}</mo>
       </mrow>
       <mo>,</mo>
       <mrow>
        <mo>{</mo>
        <mrow>
         <mi>StringJoin</mi>
         <mo>[</mo>
         <mrow>
          <mrow>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mrow>
              <mrow>
               <mi>StringSplit</mi>
               <mo>[</mo>
               <mrow>
                <mrow>
                 <mi>MT</mi>
                 <mo>[</mo>
                 <mrow>
                  <mo>[</mo>
                  <mi>i</mi>
                  <mo>]</mo>
                 </mrow>
                 <mo>]</mo>
                </mrow>
                <mo>,</mo>
                <ms>-&gt;</ms>
               </mrow>
               <mo>]</mo>
              </mrow>
              <mo>[</mo>
              <mrow>
               <mo>[</mo>
               <mn>1</mn>
               <mo>]</mo>
              </mrow>
              <mo>]</mo>
             </mrow>
             <mo>//</mo>
             <mi>Characters</mi>
            </mrow>
            <mo>)</mo>
           </mrow>
           <mo>//</mo>
           <mi>Last</mi>
          </mrow>
          <mo>,</mo>
          <mrow>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mrow>
              <mrow>
               <mi>StringSplit</mi>
               <mo>[</mo>
               <mrow>
                <mrow>
                 <mi>MT</mi>
                 <mo>[</mo>
                 <mrow>
                  <mo>[</mo>
                  <mi>i</mi>
                  <mo>]</mo>
                 </mrow>
                 <mo>]</mo>
                </mrow>
                <mo>,</mo>
                <ms>-&gt;</ms>
               </mrow>
               <mo>]</mo>
              </mrow>
              <mo>[</mo>
              <mrow>
               <mo>[</mo>
               <mn>2</mn>
               <mo>]</mo>
              </mrow>
              <mo>]</mo>
             </mrow>
             <mo>//</mo>
             <mi>Characters</mi>
            </mrow>
            <mo>)</mo>
           </mrow>
           <mo>[</mo>
           <mrow>
            <mo>[</mo>
            <mrow>
             <mo>-</mo>
             <mn>2</mn>
            </mrow>
            <mo>]</mo>
           </mrow>
           <mo>]</mo>
          </mrow>
          <mo>,</mo>
          <mrow>
           <mrow>
            <mo>(</mo>
            <mrow>
             <mrow>
              <mrow>
               <mi>StringSplit</mi>
               <mo>[</mo>
               <mrow>
                <mrow>
                 <mi>MT</mi>
                 <mo>[</mo>
                 <mrow>
                  <mo>[</mo>
                  <mi>i</mi>
                  <mo>]</mo>
                 </mrow>
                 <mo>]</mo>
                </mrow>
                <mo>,</mo>
                <ms>-&gt;</ms>
               </mrow>
               <mo>]</mo>
              </mrow>
              <mo>[</mo>
              <mrow>
               <mo>[</mo>
               <mn>2</mn>
               <mo>]</mo>
              </mrow>
              <mo>]</mo>
             </mrow>
             <mo>//</mo>
             <mi>Characters</mi>
            </mrow>
            <mo>)</mo>
           </mrow>
           <mo>//</mo>
           <mi>Last</mi>
          </mrow>
         </mrow>
         <mo>]</mo>
        </mrow>
        <mo>}</mo>
       </mrow>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mi>i</mi>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mrow>
        <mi>Length</mi>
        <mo>[</mo>
        <mi>MT</mi>
        <mo>]</mo>
       </mrow>
      </mrow>
      <mo>}</mo>
     </mrow>
    </mrow>
    <mo>]</mo>
   </mrow>
  </mrow>
  <mo>;</mo>
 </mrow>
</math>
</p>

<p class="Subsection">
 Visualizaci&oacute;n de los gr&aacute;ficos usando el enredado de <span style='font-style: italic;'>Gravity</span>, un m&eacute;todo para visualizar m&aacute;s claramente el grafo.
</p>



<p class='Input' style='background-color: #FFD9D9;'>
 <img src="HTMLFiles/Turing_75.gif" alt="Turing_75.gif" width="1243" height="50" style="vertical-align:middle" />
</p>

<p class="Output">
 <img src="HTMLFiles/Turing_76.gif" alt="Turing_76.gif" width="432" height="504" style="vertical-align:middle" />
</p>

<p class="Subsubsection">
 Im&aacute;genes para las primeras 12 m&aacute;quinas de Turing
</p>



<p class="Subsubsection">
 Visualizaci&oacute;n de las primeras 12 m&aacute;quinas de Turing
</p>



<p class="Input">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mrow>
  <mi>ImageCollage</mi>
  <mo>[</mo>
  <mi>imageList</mi>
  <mo>]</mo>
 </mrow>
</math>
</p>

<p class="Output">
 <img src="HTMLFiles/Turing_77.gif" alt="Turing_77.gif" width="846" height="615" style="vertical-align:middle" />
</p>

<p class="Subtitle">
 Pre procesamiento de los datos con el motivo de ejecutar la compilaci&oacute;n de la m&aacute;quina universal de Turing, implementado en Python 3.
</p>



<p class='Input' style='background-color: #DEF0FF;'>
 <img src="HTMLFiles/Turing_78.gif" alt="Turing_78.gif" width="636" height="196" style="vertical-align:middle" />
</p>

<p class="Subtitle">
 Ejecuci&oacute;n de la m&aacute;quina de Turing: Solo ejecutar si se sabe que la m&aacute;quina eventualmente se detiene.
</p>



<p class="Subsection">
 <span><span><img src="HTMLFiles/Turing_79.gif" alt="Turing_79.gif" width="94" height="22" style="vertical-align:middle" /></span></span>
</p>



<p class="Input">
 <img src="HTMLFiles/Turing_80.gif" alt="Turing_80.gif" width="279" height="65" style="vertical-align:middle" />
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>0 	 0 [1] 0 1 0 1 1 0 </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>1 	 0 0 [0] 1 0 1 1 0 </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>0 	 0 0 1 [1] 0 1 1 0 </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>1 	 0 0 1 0 [0] 1 1 0 </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>0 	 0 0 1 0 1 [1] 1 0 </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>1 	 0 0 1 0 1 0 [1] 0 </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>10 	 0 0 1 0 1 0 0 [0] </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mn>11 	 0 0 1 0 1 0 0 1 [0] </mn>
</math>
</p>

<p class="Print">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mtext>H 	 0 0 1 0 1 0 0 1 1 [0] </mtext>
</math>
</p>

<p class="Subsection">
 Formato posible para la visualizaci&oacute;n de las m&aacute;quinas de Turing.
</p>



<p class="Input">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mrow>
  <mrow>
   <mi>a</mi>
   <mo>=</mo>
   <mrow>
    <mo>{</mo>
    <mrow>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <ms>[1]</ms>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mtext> </mtext>
       <mo>,</mo>
       <ms>[0]</ms>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <ms>[0]</ms>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <ms>[0]</ms>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mtext> </mtext>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <ms>[1]</ms>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <ms>[1]</ms>
       <mo>,</mo>
       <mn>0</mn>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <ms>[0]</ms>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <ms>[0]</ms>
      </mrow>
      <mo>}</mo>
     </mrow>
     <mo>,</mo>
     <mtext>&#62371;</mtext>
     <mrow>
      <mo>{</mo>
      <mrow>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>0</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>1</mn>
       <mo>,</mo>
       <ms>[0]</ms>
      </mrow>
      <mo>}</mo>
     </mrow>
    </mrow>
    <mtext>&#62371;</mtext>
    <mo>}</mo>
   </mrow>
  </mrow>
  <mo>;</mo>
 </mrow>
</math>
</p>

<p class="Input">
 <math xmlns='http://www.w3.org/1998/Math/MathML'>
 <mrow>
  <mrow>
   <mi>a</mi>
   <mo>/.</mo>
   <mrow>
    <mo>{</mo>
    <mrow>
     <mrow>
      <ms>[0]</ms>
      <mo>-&gt;</mo>
      <mi>Pink</mi>
     </mrow>
     <mo>,</mo>
     <mrow>
      <ms>[1]</ms>
      <mo>-&gt;</mo>
      <mi>Green</mi>
     </mrow>
     <mo>,</mo>
     <mrow>
      <mn>0</mn>
      <mo>-&gt;</mo>
      <mi>Yellow</mi>
     </mrow>
     <mo>,</mo>
     <mrow>
      <mn>1</mn>
      <mo>-&gt;</mo>
      <mtext> </mtext>
      <mi>Yellow</mi>
     </mrow>
    </mrow>
    <mo>}</mo>
   </mrow>
  </mrow>
  <mo>//</mo>
  <mi>Grid</mi>
 </mrow>
</math>
</p>

<table class='Output'>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_81.gif" alt="Turing_81.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_82.gif" alt="Turing_82.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_83.gif" alt="Turing_83.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_84.gif" alt="Turing_84.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_85.gif" alt="Turing_85.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_86.gif" alt="Turing_86.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_87.gif" alt="Turing_87.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_88.gif" alt="Turing_88.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_89.gif" alt="Turing_89.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_90.gif" alt="Turing_90.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_91.gif" alt="Turing_91.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_92.gif" alt="Turing_92.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_93.gif" alt="Turing_93.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_94.gif" alt="Turing_94.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_95.gif" alt="Turing_95.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_96.gif" alt="Turing_96.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_97.gif" alt="Turing_97.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_98.gif" alt="Turing_98.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_99.gif" alt="Turing_99.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_100.gif" alt="Turing_100.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_101.gif" alt="Turing_101.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_102.gif" alt="Turing_102.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_103.gif" alt="Turing_103.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_104.gif" alt="Turing_104.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_105.gif" alt="Turing_105.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_106.gif" alt="Turing_106.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_107.gif" alt="Turing_107.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_108.gif" alt="Turing_108.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_109.gif" alt="Turing_109.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_110.gif" alt="Turing_110.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_111.gif" alt="Turing_111.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_112.gif" alt="Turing_112.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_113.gif" alt="Turing_113.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_114.gif" alt="Turing_114.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_115.gif" alt="Turing_115.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_116.gif" alt="Turing_116.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_117.gif" alt="Turing_117.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_118.gif" alt="Turing_118.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_119.gif" alt="Turing_119.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_120.gif" alt="Turing_120.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_121.gif" alt="Turing_121.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_122.gif" alt="Turing_122.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_123.gif" alt="Turing_123.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_124.gif" alt="Turing_124.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_125.gif" alt="Turing_125.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_126.gif" alt="Turing_126.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_127.gif" alt="Turing_127.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_128.gif" alt="Turing_128.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_129.gif" alt="Turing_129.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_130.gif" alt="Turing_130.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_131.gif" alt="Turing_131.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_132.gif" alt="Turing_132.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_133.gif" alt="Turing_133.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_134.gif" alt="Turing_134.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_135.gif" alt="Turing_135.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_136.gif" alt="Turing_136.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_137.gif" alt="Turing_137.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_138.gif" alt="Turing_138.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_139.gif" alt="Turing_139.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_140.gif" alt="Turing_140.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_141.gif" alt="Turing_141.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_142.gif" alt="Turing_142.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_143.gif" alt="Turing_143.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_144.gif" alt="Turing_144.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_145.gif" alt="Turing_145.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span></span></td>
 </tr>
 <tr style='vertical-align: baseline;'>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_146.gif" alt="Turing_146.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_147.gif" alt="Turing_147.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_148.gif" alt="Turing_148.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_149.gif" alt="Turing_149.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_150.gif" alt="Turing_150.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_151.gif" alt="Turing_151.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_152.gif" alt="Turing_152.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_153.gif" alt="Turing_153.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_154.gif" alt="Turing_154.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
  <td style='text-align: center;'><span><span><img src="HTMLFiles/Turing_155.gif" alt="Turing_155.gif" width="9" height="13" style="vertical-align:middle" /></span></span></td>
 </tr>
</table>




<div style="font-family:Helvetica; font-size:11px; width:100%; border:1px none #999999; border-top-style:solid; padding-top:2px; margin-top:20px;">
 <a href="http://www.wolfram.com/language/" style="color:#000; text-decoration:none;">
  <span style="color:#555555">Created with the Wolfram Language</span> 
 </a>
</div>
</body>

</html>
